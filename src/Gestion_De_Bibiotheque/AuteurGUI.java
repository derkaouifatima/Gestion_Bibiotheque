/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Gestion_De_Bibiotheque;
import Gestion_De_Bibiotheque.BibliothequeGUI;
import Gestion_De_Bibiotheque.DatabaseConnection;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author pc
 */
public class AuteurGUI extends javax.swing.JFrame {
private BibliothequeGUI bibliothequeDAO;
    /**
     * Creates new form AuteurGUI
     */
    
    public AuteurGUI() {
                 bibliothequeDAO = new BibliothequeGUI();

        initComponents();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        AuteurIDField1 = new javax.swing.JTextField();
        NomField2 = new javax.swing.JTextField();
        PrenomField5 = new javax.swing.JTextField();
        NationaliteField7 = new javax.swing.JTextField();
        DateNaiFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AuteurTable = new javax.swing.JTable();
        AJOUTERButton = new javax.swing.JButton();
        SUPPRIMERButton = new javax.swing.JButton();
        MODIFIERButton = new javax.swing.JButton();
        AFFICHERButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        RechercheTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("                            Contact");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("AuteurID");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Nationalite");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Prenom");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Nom");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Date Naissance");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        AuteurIDField1.setBackground(new java.awt.Color(204, 0, 0));

        NationaliteField7.setForeground(new java.awt.Color(102, 102, 102));
        NationaliteField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NationaliteField7ActionPerformed(evt);
            }
        });

        DateNaiFormattedTextField1.setText("YYYY-MM-DD");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NationaliteField7, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(PrenomField5)
                            .addComponent(NomField2)
                            .addComponent(AuteurIDField1)
                            .addComponent(DateNaiFormattedTextField1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AuteurIDField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NomField2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PrenomField5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(DateNaiFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(NationaliteField7))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        AuteurTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "AuteutrID", "Nom", "Prenom", "Date Naissance", "Nationalite"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        AuteurTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AuteurTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(AuteurTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        AJOUTERButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AJOUTERButton.setText("Ajouter Auteur ");
        AJOUTERButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AJOUTERButtonActionPerformed(evt);
            }
        });

        SUPPRIMERButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SUPPRIMERButton.setText("Suprimer Auteur");
        SUPPRIMERButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUPPRIMERButtonActionPerformed(evt);
            }
        });

        MODIFIERButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MODIFIERButton.setText("Modefier Auteur ");
        MODIFIERButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MODIFIERButtonActionPerformed(evt);
            }
        });

        AFFICHERButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AFFICHERButton5.setText("Afficher Auteur");
        AFFICHERButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AFFICHERButton5ActionPerformed(evt);
            }
        });

        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setText("                    GESTION AUTEUR  ");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(224, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("RECHERCHE");

        RechercheTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RechercheTextField1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(RechercheTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AJOUTERButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SUPPRIMERButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MODIFIERButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AFFICHERButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(113, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(RechercheTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AJOUTERButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SUPPRIMERButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MODIFIERButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AFFICHERButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NationaliteField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NationaliteField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NationaliteField7ActionPerformed

    private void AJOUTERButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AJOUTERButtonActionPerformed
        // TODO add your handling code here:
        
    // Récupération des valeurs des champs de texte
    
    String AuteurID = AuteurIDField1.getText();
    String Nom = NomField2.getText();
    String Prenom = PrenomField5.getText();
    String DateNaissance = DateNaiFormattedTextField1.getText();
    String Nationalite = NationaliteField7.getText();
   
    // Validation des champs
    if (AuteurID.isEmpty() || Nom.isEmpty() || Prenom.isEmpty() || DateNaissance.isEmpty() || Nationalite.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs.");
        return;
    }

    // Requête SQL sans AuteurID (s'il est auto-incrémenté)
    String sql = "INSERT INTO Auteurs( Nom,Prenom, DateNaissance, Nationalite) VALUES (?,?,?,?)";

    try (Connection conn = DatabaseConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        // Vérification de la connexion à la base de données
        if (conn == null) {
            throw new SQLException("Connexion à la base de données échouée.");
        }

        // Configuration des paramètres de la requête
        pstmt.setString(1, Nom);
        pstmt.setString(2, Prenom);
        pstmt.setString(3, DateNaissance);
        pstmt.setString(4, Nationalite);
        
        // Conversion de la date (si nécessaire)
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date DateNai = dateFormat.parse(DateNaissance);
            pstmt.setDate(3, new java.sql.Date(DateNai.getTime()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date incorrect. Utilisez 'YYYY-MM-DD'.");
            return;
        }
        try {
            Date DateEmrout = dateFormat.parse(DateNaissance);
            pstmt.setDate(4, new java.sql.Date(DateEmrout.getTime()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date incorrect. Utilisez 'YYYY-MM-DD'.");
            return;
        }

      
        // Exécution de la mise à jour
        int rowsAffected = pstmt.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Auteur ajouté avec succès!");

            // Effacement des champs après ajout
            NomField2.setText("");
            PrenomField5.setText("");
            DateNaiFormattedTextField1.setText("");
            NationaliteField7.setText("");
           

            // Actualisation de l'affichage des Auteur
            AFFICHERButton5ActionPerformed(evt); 
        }

    } catch (SQLException e) {
        e.printStackTrace(); // Journalisation de l'erreur
        JOptionPane.showMessageDialog(null, "Erreur lors de l'ajout du Auteur : " + e.getMessage());
    }

                                            

                                              

    }//GEN-LAST:event_AJOUTERButtonActionPerformed

    private void SUPPRIMERButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUPPRIMERButtonActionPerformed
        // TODO add your handling code here:
                                   
                                               
    int selectedRow = AuteurTable.getSelectedRow();
    if (selectedRow != -1) {
        // Get the AuteurID from the selected row
        int livreID = (int) AuteurTable.getValueAt(selectedRow, 0); // Assuming AuteurID is in the first column
        
        String sql = "DELETE FROM Auteurs WHERE AuteurID = ?";
        
        int confirm = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer ce Auteur?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection conn = DatabaseConnection.getConnection();
                 PreparedStatement pstmt = conn.prepareStatement(sql)) {
                 
                pstmt.setInt(1, livreID);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Auteur supprimé avec succès!");
                
                // Refresh the table after deletion
                AFFICHERButton5ActionPerformed(evt); // Refresh the table
            } catch (SQLException e) {
                e.printStackTrace(); // Print stack trace for debugging
                JOptionPane.showMessageDialog(null, "Erreur lors de la suppression des données : " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Veuillez sélectionner un Auteur à supprimer.");
    }



                                             

    }//GEN-LAST:event_SUPPRIMERButtonActionPerformed

    private void MODIFIERButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MODIFIERButtonActionPerformed
        // TODO add your handling code here:
 
        
    // Récupération des valeurs des champs de texte
    
    String AuteurID = AuteurIDField1.getText();
    String Nom = NomField2.getText();
    String Prenom = PrenomField5.getText();
    String DateNaissance = DateNaiFormattedTextField1.getText();
    String Nationalite = NationaliteField7.getText();
   
    // Validation des champs
    if (AuteurID.isEmpty() || Nom.isEmpty() || Prenom.isEmpty() || DateNaissance.isEmpty() || Nationalite.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs.");
        return;
    }

    // Requête SQL sans AuteurID (s'il est auto-incrémenté)
    String sql = "UPDATE Auteurs  SET Nom=?,Prenom=?,DateNaissance=?,Nationalite=? WHERE AuteurID=?";
    try (Connection conn = DatabaseConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        // Vérification de la connexion à la base de données
        if (conn == null) {
            throw new SQLException("Connexion à la base de données échouée.");
        }

        // Configuration des paramètres de la requête
        pstmt.setString(1, Nom);
        pstmt.setString(2, Prenom);
        // Conversion de la date (si nécessaire)
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date DateNai = dateFormat.parse(DateNaissance);
            pstmt.setDate(3, new java.sql.Date(DateNai.getTime()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date incorrect. Utilisez 'YYYY-MM-DD'.");
            return;
        }
       pstmt.setString(4, Nationalite);
         
pstmt.setInt(5, Integer.parseInt(AuteurID));
      
        // Exécution de la mise à jour
        int rowsAffected = pstmt.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Auteur modifie avec succès!");

            // Effacement des champs après ajout
            NomField2.setText("");
            PrenomField5.setText("");
            DateNaiFormattedTextField1.setText("");
            NationaliteField7.setText("");
           

            // Actualisation de l'affichage des Auteurs
            AFFICHERButton5ActionPerformed(evt); 
        }

    } catch (SQLException e) {
        e.printStackTrace(); // Journalisation de l'erreur
        JOptionPane.showMessageDialog(null, "Erreur lors de l'modifier du Auteur : " + e.getMessage());
    }
                            
    }//GEN-LAST:event_MODIFIERButtonActionPerformed

    private void AFFICHERButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AFFICHERButton5ActionPerformed
                                                         
        // TODO add your handling code here:
                                                 
    String sql = "SELECT * FROM Auteurs";
    
    try (Connection conn = DatabaseConnection.getConnection();
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(sql)) {
        
        DefaultTableModel tablemodel = (DefaultTableModel) AuteurTable.getModel();
        
        // Vider le modèle avant de le remplir
        tablemodel.setRowCount(0);

        while (rs.next()) {
            int AuteurID = rs.getInt("AuteurID");
            String Nom = rs.getString("Nom");
            String Prenom = rs.getString("Prenom");
            String dateNaissance = rs.getString("DateNaissance");
            String Nationalite = rs.getString("Nationalite");
           

            // Créer un tableau d'objets pour ajouter à la table
            Object[] AuteurTable = {AuteurID, Nom, Prenom, dateNaissance, Nationalite};
            
            // Ajouter la ligne au modèle de table
            tablemodel.addRow(AuteurTable);
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur lors de la récupération des données.");
    }


    
    }//GEN-LAST:event_AFFICHERButton5ActionPerformed

    private void AuteurTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AuteurTableMouseReleased
        // TODO add your handling code here:
        int i = AuteurTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)AuteurTable.getModel();
        AuteurIDField1.setText(model.getValueAt(i, 0).toString());
        NomField2.setText(model.getValueAt(i, 1).toString());
        PrenomField5.setText(model.getValueAt(i, 2).toString());
        DateNaiFormattedTextField1.setText(model.getValueAt(i, 3).toString());
        NationaliteField7.setText(model.getValueAt(i, 4).toString());
    }//GEN-LAST:event_AuteurTableMouseReleased

    private void RechercheTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RechercheTextField1KeyReleased
        String searchText = RechercheTextField1.getText().trim(); 
    if (!searchText.isEmpty()) {
        TableAuteurRecherche(searchText);
    } else {
        // إذا كان مربع البحث فارغًا، قم بعرض كل البيانات
        TableAuteurRecherche(""); 
    }
    }//GEN-LAST:event_RechercheTextField1KeyReleased

 public void TableAuteurRecherche(String valeur) {
    String[] auteur = {"AuteurID", "Nom", "Prenom", "DateNaissance", "Nationalite"};
    DefaultTableModel model = new DefaultTableModel(null, auteur);

    // استخدام PreparedStatement لتجنب أخطاء SQL Injection
    String sql = "SELECT * FROM auteurs WHERE Nom LIKE ?";

    try (Connection conn = DatabaseConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        // إعداد قيمة البحث مع إضافة علامات %
        pstmt.setString(1, "%" + valeur + "%");

        try (ResultSet rs = pstmt.executeQuery()) {
            // تخزين النتائج في الجدول
            while (rs.next()) {
                String[] afficher = new String[5];
                afficher[0] = rs.getString("AuteurID");
                afficher[1] = rs.getString("Nom");
                afficher[2] = rs.getString("Prenom");
                afficher[3] = rs.getString("DateNaissance");
                afficher[4] = rs.getString("Nationalite");
                model.addRow(afficher);
            }

            // تحديث الجدول بالموديل
            AuteurTable.setModel(model);
        }

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur lors de la récupération des données.");
    }
}

            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuteurGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuteurGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuteurGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuteurGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuteurGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AFFICHERButton5;
    private javax.swing.JButton AJOUTERButton;
    private javax.swing.JTextField AuteurIDField1;
    private javax.swing.JTable AuteurTable;
    private javax.swing.JFormattedTextField DateNaiFormattedTextField1;
    private javax.swing.JButton MODIFIERButton;
    private javax.swing.JTextField NationaliteField7;
    private javax.swing.JTextField NomField2;
    private javax.swing.JTextField PrenomField5;
    private javax.swing.JTextField RechercheTextField1;
    private javax.swing.JButton SUPPRIMERButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
