
/**
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 **/
package Gestion_De_Bibiotheque;
import Gestion_De_Bibiotheque.BibliothequeGUI;
import Gestion_De_Bibiotheque.DatabaseConnection;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/* *
 * @author pc
 */
public class EmpruntGUI extends javax.swing.JFrame {
private BibliothequeGUI bibliothequeDAO;
    /**
     * Creates new form EmpruntGUI
     */
    public EmpruntGUI() {

         bibliothequeDAO = new BibliothequeGUI();
    
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        EmprumetIDTextField = new javax.swing.JTextField();
        LivreIDTextField = new javax.swing.JTextField();
        MemreIDTextField = new javax.swing.JTextField();
        DatEmFormattedTextField = new javax.swing.JFormattedTextField();
        DateReFormattedTextField = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        EmpruntTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        AjoutrtButton = new javax.swing.JButton();
        SuprimerButton = new javax.swing.JButton();
        ModifierButton = new javax.swing.JButton();
        AfficherButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        RECHERCHETextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("                            Contact");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("EmprumtID");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("DateRetour");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("MembreID");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("LivreID");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("DateEmprunt");

        EmprumetIDTextField.setBackground(new java.awt.Color(204, 0, 0));

        DatEmFormattedTextField.setText("YYYY-MM-DD");

        DateReFormattedTextField.setText("YYYY-MM-DD");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MemreIDTextField)
                            .addComponent(LivreIDTextField)
                            .addComponent(EmprumetIDTextField)
                            .addComponent(DatEmFormattedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(DateReFormattedTextField)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmprumetIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LivreIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MemreIDTextField)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(DatEmFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(DateReFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EmpruntTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "EmpruntID", "LivreID", "MembreID", "DateEmprunt", "DateRetour"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        EmpruntTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                EmpruntTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(EmpruntTable);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addContainerGap())
        );

        AjoutrtButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AjoutrtButton.setText("Ajouter Emprunt ");
        AjoutrtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutrtButtonActionPerformed(evt);
            }
        });

        SuprimerButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        SuprimerButton.setText("Suprimer Emprunt");
        SuprimerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuprimerButtonActionPerformed(evt);
            }
        });

        ModifierButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ModifierButton.setText("Modefier Emprunt ");
        ModifierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierButtonActionPerformed(evt);
            }
        });

        AfficherButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AfficherButton.setText("Afficher Emprunt");
        AfficherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AfficherButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setText("    GESTION EMPRUNT     ");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel4)
                .addContainerGap(234, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("RECHERCHE");

        RECHERCHETextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RECHERCHETextField1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(AjoutrtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SuprimerButton)
                        .addGap(12, 12, 12)
                        .addComponent(ModifierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AfficherButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RECHERCHETextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RECHERCHETextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel7))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AjoutrtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SuprimerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ModifierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AfficherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AjoutrtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutrtButtonActionPerformed
        // TODO add your handling code here:
        
    // Récupération des valeurs des champs de texte
    
    String EmprumetID = EmprumetIDTextField.getText();
    String LivreID = LivreIDTextField.getText();
    String MemreID = MemreIDTextField.getText();
    String DatEmFormatted = DatEmFormattedTextField.getText();
    String DateReFormatted = DateReFormattedTextField.getText();
   
    // Validation des champs
    if (LivreID.isEmpty() || MemreID.isEmpty() || DatEmFormatted.isEmpty() || DateReFormatted.isEmpty() ) {
        JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs.");
        return;
    }

    // Requête SQL sans LivreID (s'il est auto-incrémenté)
    String sql = "INSERT INTO Emprunts( LivreID,MembreID, DateEmprunt, DateRetour) VALUES (?,?,?,?)";

    try (Connection conn = DatabaseConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        // Vérification de la connexion à la base de données
        if (conn == null) {
            throw new SQLException("Connexion à la base de données échouée.");
        }

        // Configuration des paramètres de la requête
        pstmt.setString(1, LivreID);
        pstmt.setString(2, MemreID);
        pstmt.setString(3, DatEmFormatted);
        pstmt.setString(4, DateReFormatted);
        
        // Conversion de la date (si nécessaire)
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date DateEm = dateFormat.parse(DatEmFormatted);
            pstmt.setDate(3, new java.sql.Date(DateEm.getTime()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date incorrect. Utilisez 'YYYY-MM-DD'.");
            return;
        }
        try {
            Date DateEmrout = dateFormat.parse(DateReFormatted);
            pstmt.setDate(4, new java.sql.Date(DateEmrout.getTime()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date incorrect. Utilisez 'YYYY-MM-DD'.");
            return;
        }

      
        // Exécution de la mise à jour
        int rowsAffected = pstmt.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Emprunt ajouté avec succès!");

            // Effacement des champs après ajout
            LivreIDTextField.setText("");
            MemreIDTextField.setText("");
            DatEmFormattedTextField.setText("");
            DateReFormattedTextField.setText("");
           

            // Actualisation de l'affichage des Emprunt
            AfficherButtonActionPerformed(evt); 
        }

    } catch (SQLException e) {
        e.printStackTrace(); // Journalisation de l'erreur
        JOptionPane.showMessageDialog(null, "Erreur lors de l'ajout du Emprunt : " + e.getMessage());
    }

                                            

    }//GEN-LAST:event_AjoutrtButtonActionPerformed

    private void SuprimerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuprimerButtonActionPerformed
        // TODO add your handling code here:
 int selectedRow = EmpruntTable.getSelectedRow();
    if (selectedRow != -1) {
        // Get the EmpruntID from the selected row
        int livreID = (int) EmpruntTable.getValueAt(selectedRow, 0); // Assuming EmpruntID is in the first column
        
        String sql = "DELETE FROM emprunts WHERE EmpruntID = ?";
        
        int confirm = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer ce Emprumt?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection conn = DatabaseConnection.getConnection();
                 PreparedStatement pstmt = conn.prepareStatement(sql)) {
                 
                pstmt.setInt(1, livreID);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Emprumt supprimé avec succès!");
                
                // Refresh the table after deletion
                AfficherButtonActionPerformed(evt); // Refresh the table
            } catch (SQLException e) {
                e.printStackTrace(); // Print stack trace for debugging
                JOptionPane.showMessageDialog(null, "Erreur lors de la suppression des données : " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Veuillez sélectionner un Emprumt à supprimer.");
    }


    }//GEN-LAST:event_SuprimerButtonActionPerformed

    private void ModifierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierButtonActionPerformed
        // TODO add your handling code here:
                                                       
   
    // Récupération des valeurs des champs de texte
     String EmprumetID = EmprumetIDTextField.getText();
    String LivreID = LivreIDTextField.getText();
    String MemreID = MemreIDTextField.getText();
    String DatEmFormatted = DatEmFormattedTextField.getText();
    String DateReFormatted = DateReFormattedTextField.getText();

    // Validation des champs
    if (LivreID.isEmpty() || MemreID.isEmpty() || DatEmFormatted.isEmpty() || DateReFormatted.isEmpty() ) {
        JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs.");
        return;
    }

    // Requête SQL de mise à jour
    String sql = "UPDATE Emprunts SET EmpruntID = ?, LivreID = ?, MembreID = ?, DateEmprunt = ?, DateRetour = ? WHERE EmpruntID  = ?";

    try (Connection conn = DatabaseConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        // Vérification de la connexion à la base de données
        if (conn == null) {
            throw new SQLException("Connexion à la base de données échouée.");
        }

        // Configuration des paramètres de la requête
         pstmt.setString(1, LivreID);
        pstmt.setString(2, MemreID);
        pstmt.setString(3, DatEmFormatted);
        pstmt.setString(4, DateReFormatted);
        

      // Conversion de la date (si nécessaire)
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date DateEm = dateFormat.parse(DatEmFormatted);
            pstmt.setDate(3, new java.sql.Date(DateEm.getTime()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date incorrect. Utilisez 'YYYY-MM-DD'.");
            return;
        }
        try {
            Date DateEmrout = dateFormat.parse(DateReFormatted);
            pstmt.setDate(4, new java.sql.Date(DateEmrout.getTime()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date incorrect. Utilisez 'YYYY-MM-DD'.");
            return;
        }


        
        // Exécution de la mise à jour
        int rowsAffected = pstmt.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Emprunt modifié avec succès!");

            // Effacement des champs après modification
            // Effacement des champs après ajout
            LivreIDTextField.setText("");
            MemreIDTextField.setText("");
            DatEmFormattedTextField.setText("");
            DateReFormattedTextField.setText("");
           

            // Actualisation de l'affichage des Emprunt
          AfficherButtonActionPerformed(evt);
        } else {
            JOptionPane.showMessageDialog(null, "Erreur : Aucun Emprunt avec cet ID n'a été trouvé.");
        }

    } catch (SQLException e) {
        e.printStackTrace(); // Journalisation de l'erreur
        JOptionPane.showMessageDialog(null, "Erreur lors de la modification du Emprunt : " + e.getMessage());
    }

    }//GEN-LAST:event_ModifierButtonActionPerformed

    private void AfficherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AfficherButtonActionPerformed
        // TODO add your handling code here:

                                          
    String sql = "SELECT * FROM emprunts";
    
    try (Connection conn = DatabaseConnection.getConnection();
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(sql)) {
        
        DefaultTableModel tablemodel = (DefaultTableModel) EmpruntTable.getModel();
        
        // Vider le modèle avant de le remplir
        tablemodel.setRowCount(0);

        while (rs.next()) {
            int EmprumetID = rs.getInt("EmpruntID");
            int LivreID = rs.getInt("LivreID");
            int MemreIDTextField = rs.getInt("MembreID");
            String DatEmFormatted = rs.getString("DateEmprunt");
            String DateReFormatted = rs.getString("DateRetour");
          
            

            // Créer un tableau d'objets pour ajouter à la table
            Object[] Emprimetlist = {EmprumetID, LivreID, MemreIDTextField, DatEmFormatted, DateReFormatted};
            
            // Ajouter la ligne au modèle de table
            tablemodel.addRow(Emprimetlist);
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur lors de la récupération des données.");
    }

    }//GEN-LAST:event_AfficherButtonActionPerformed

    private void EmpruntTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmpruntTableMouseReleased
        // TODO add your handling code here:
         int i = EmpruntTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)EmpruntTable.getModel();
        EmprumetIDTextField.setText(model.getValueAt(i, 0).toString());
        LivreIDTextField.setText(model.getValueAt(i, 1).toString());
        MemreIDTextField.setText(model.getValueAt(i, 2).toString());
        DatEmFormattedTextField.setText(model.getValueAt(i, 3).toString());
        DateReFormattedTextField.setText(model.getValueAt(i, 4).toString());
    }//GEN-LAST:event_EmpruntTableMouseReleased

    private void RECHERCHETextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RECHERCHETextField1KeyReleased
        // TODO add your handling code here:
         String searchText = RECHERCHETextField1.getText().trim(); 
    if (!searchText.isEmpty()) {
        TableEmpruntRecherche(searchText);
    } else {
        // إذا كان مربع البحث فارغًا، قم بعرض كل البيانات
        TableEmpruntRecherche(""); 
    }
    }//GEN-LAST:event_RECHERCHETextField1KeyReleased
public void TableEmpruntRecherche(String valeur) {
    // تعريف أسماء الأعمدة التي سيتم عرضها في الجدول
    String[] emprunt = {"EmpruntID", "LivreID", "MembreID", "DateEmprunt", "DateRetour"};
    DefaultTableModel model = new DefaultTableModel(null, emprunt);

    // جملة SQL مع معامل البحث
    String sql = "SELECT * FROM emprunts WHERE LivreID LIKE ? OR `MembreID` LIKE ?";

    try (Connection conn = DatabaseConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        // إعداد قيمة البحث مع إضافة علامات %
        String searchValue = "%" + valeur.trim() + "%";
        pstmt.setString(1, searchValue);
        pstmt.setString(2, searchValue);

        try (ResultSet rs = pstmt.executeQuery()) {
            boolean found = false;

            // تخزين النتائج في الجدول
            while (rs.next()) {
                found = true;
                String[] afficher = new String[5];
                afficher[0] = rs.getString("EmpruntID");
                afficher[1] = rs.getString("LivreID");
                afficher[2] = rs.getString("MembreID");
                afficher[3] = rs.getString("DateEmprunt");
                afficher[4] = rs.getString("DateRetour");
                model.addRow(afficher);
            }

            if (!found) {
                JOptionPane.showMessageDialog(null, "Aucun emprunt trouvé.");
            }

            // تحديث الجدول بالموديل الجديد
            EmpruntTable.setModel(model);

        }

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur lors de la récupération des données.");
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmpruntGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmpruntGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmpruntGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmpruntGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmpruntGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AfficherButton;
    private javax.swing.JButton AjoutrtButton;
    private javax.swing.JFormattedTextField DatEmFormattedTextField;
    private javax.swing.JFormattedTextField DateReFormattedTextField;
    private javax.swing.JTextField EmprumetIDTextField;
    private javax.swing.JTable EmpruntTable;
    private javax.swing.JTextField LivreIDTextField;
    private javax.swing.JTextField MemreIDTextField;
    private javax.swing.JButton ModifierButton;
    private javax.swing.JTextField RECHERCHETextField1;
    private javax.swing.JButton SuprimerButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

}